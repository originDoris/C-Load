/*
 * This file is generated by jOOQ.
 */
package com.cl.repository.tables;


import com.cl.repository.Indexes;
import com.cl.repository.Keys;
import com.cl.repository.Public;
import com.cl.repository.tables.records.ClCodeConfigRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 代码配置
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClCodeConfig extends TableImpl<ClCodeConfigRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.cl_code_config</code>
     */
    public static final ClCodeConfig CL_CODE_CONFIG = new ClCodeConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClCodeConfigRecord> getRecordType() {
        return ClCodeConfigRecord.class;
    }

    /**
     * The column <code>public.cl_code_config.id</code>.
     */
    public final TableField<ClCodeConfigRecord, Long> ID = createField(org.jooq.impl.DSL.name("id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.cl_code_config.gmt_create</code>. 创建时间
     */
    public final TableField<ClCodeConfigRecord, LocalDateTime> GMT_CREATE = createField(org.jooq.impl.DSL.name("gmt_create"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "创建时间");

    /**
     * The column <code>public.cl_code_config.gmt_modified</code>. 修改时间
     */
    public final TableField<ClCodeConfigRecord, LocalDateTime> GMT_MODIFIED = createField(org.jooq.impl.DSL.name("gmt_modified"), SQLDataType.LOCALDATETIME(6), this, "修改时间");

    /**
     * The column <code>public.cl_code_config.creator</code>. 创建人
     */
    public final TableField<ClCodeConfigRecord, String> CREATOR = createField(org.jooq.impl.DSL.name("creator"), SQLDataType.VARCHAR(50), this, "创建人");

    /**
     * The column <code>public.cl_code_config.editor</code>. 创建人
     */
    public final TableField<ClCodeConfigRecord, String> EDITOR = createField(org.jooq.impl.DSL.name("editor"), SQLDataType.VARCHAR(50), this, "创建人");

    /**
     * The column <code>public.cl_code_config.dsl</code>. 语言类型
     */
    public final TableField<ClCodeConfigRecord, String> DSL = createField(org.jooq.impl.DSL.name("dsl"), SQLDataType.VARCHAR(50).nullable(false), this, "语言类型");

    /**
     * The column <code>public.cl_code_config.content</code>. 代码内容
     */
    public final TableField<ClCodeConfigRecord, String> CONTENT = createField(org.jooq.impl.DSL.name("content"), SQLDataType.CLOB.nullable(false), this, "代码内容");

    /**
     * The column <code>public.cl_code_config.status</code>. publish ,
     * normal，disable
     */
    public final TableField<ClCodeConfigRecord, String> STATUS = createField(org.jooq.impl.DSL.name("status"), SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.field("'normal'::character varying", SQLDataType.VARCHAR)), this, "publish , normal，disable");

    /**
     * The column <code>public.cl_code_config.is_delete</code>. 0 否 1 是
     */
    public final TableField<ClCodeConfigRecord, Short> IS_DELETE = createField(org.jooq.impl.DSL.name("is_delete"), SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", SQLDataType.SMALLINT)), this, "0 否 1 是");

    /**
     * The column <code>public.cl_code_config.tenant_id</code>. 租户id
     */
    public final TableField<ClCodeConfigRecord, Long> TENANT_ID = createField(org.jooq.impl.DSL.name("tenant_id"), SQLDataType.BIGINT, this, "租户id");

    /**
     * The column <code>public.cl_code_config.code_name</code>.
     */
    public final TableField<ClCodeConfigRecord, String> CODE_NAME = createField(org.jooq.impl.DSL.name("code_name"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.cl_code_config.desc</code>.
     */
    public final TableField<ClCodeConfigRecord, String> DESC = createField(org.jooq.impl.DSL.name("desc"), SQLDataType.VARCHAR(255), this, "");

    private ClCodeConfig(Name alias, Table<ClCodeConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClCodeConfig(Name alias, Table<ClCodeConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment("代码配置"), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.cl_code_config</code> table reference
     */
    public ClCodeConfig(String alias) {
        this(org.jooq.impl.DSL.name(alias), CL_CODE_CONFIG);
    }

    /**
     * Create an aliased <code>public.cl_code_config</code> table reference
     */
    public ClCodeConfig(Name alias) {
        this(alias, CL_CODE_CONFIG);
    }

    /**
     * Create a <code>public.cl_code_config</code> table reference
     */
    public ClCodeConfig() {
        this(org.jooq.impl.DSL.name("cl_code_config"), null);
    }

    public <O extends Record> ClCodeConfig(Table<O> child, ForeignKey<O, ClCodeConfigRecord> key) {
        super(child, key, CL_CODE_CONFIG);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.CL_CODE_CONFIG_DSL_INDEX, Indexes.CL_CODE_CONFIG_STATUS_INDEX);
    }

    @Override
    public UniqueKey<ClCodeConfigRecord> getPrimaryKey() {
        return Keys.CL_CODE_CONFIG_PK;
    }

    @Override
    public ClCodeConfig as(String alias) {
        return new ClCodeConfig(org.jooq.impl.DSL.name(alias), this);
    }

    @Override
    public ClCodeConfig as(Name alias) {
        return new ClCodeConfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClCodeConfig rename(String name) {
        return new ClCodeConfig(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClCodeConfig rename(Name name) {
        return new ClCodeConfig(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, LocalDateTime, LocalDateTime, String, String, String, String, String, Short, Long, String, String> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}
